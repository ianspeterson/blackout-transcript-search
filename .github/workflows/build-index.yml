name: Build captions index from SRTsv3

permissions:
  contents: write

on:
  schedule:
    - cron: "0 */6 * * *"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install ffmpeg (needed for some subtitle conversions)
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg

      - name: Install tools
        run: |
          python -m pip install --upgrade pip
          pip install yt-dlp srt

      - name: Prepare dirs
        run: mkdir -p captions public

      # -------- cookies (REQUIRED) --------
      - name: Write cookies file (required)
        run: |
          if [ -z "${{ secrets.YTDLP_COOKIES }}" ]; then
            echo "❌ Missing YTDLP_COOKIES secret"; exit 1
          fi
          printf "%s" "${{ secrets.YTDLP_COOKIES }}" > cookies.txt
          BYTES=$(wc -c < cookies.txt || echo 0)
          if [ "$BYTES" -lt 100 ]; then
            echo "❌ cookies.txt looks too small ($BYTES bytes). Re-export in Netscape format."; exit 1
          fi
          head -n 1 cookies.txt | grep -q 'Netscape' || echo "⚠️ cookies.txt may not be in Netscape format"

      # -------- download captions (manual first, then auto fallback) --------
      - name: Download uploaded SRT captions (manual)
        run: |
          set -euxo pipefail
          yt-dlp -v -i --skip-download --force-ipv4 \
            --user-agent "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36" \
            --cookies cookies.txt \
            --extractor-args "youtube:player_client=web" \
            --write-sub --sub-langs "en,en-US,en.*" \
            --convert-subs srt --no-overwrites \
            --sleep-requests 0.4 --retries 10 --retry-sleep 2 \
            -o "captions/%(id)s.%(ext)s" \
            "https://www.youtube.com/playlist?list=UUbRF6gtkzmbSOtcM6Jq4ANw"

      - name: Download AUTO captions fallback
        run: |
          set -euxo pipefail
          yt-dlp -v -i --skip-download --force-ipv4 \
            --user-agent "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/123.0.0.0 Safari/537.36" \
            --cookies cookies.txt \
            --extractor-args "youtube:player_client=web" \
            --write-auto-sub --sub-langs "en,en-US,en.*" \
            --convert-subs srt --no-overwrites \
            --sleep-requests 0.4 --retries 10 --retry-sleep 2 \
            -o "captions/%(id)s.auto.%(ext)s" \
            "https://www.youtube.com/playlist?list=UUbRF6gtkzmbSOtcM6Jq4ANw"

      - name: Show caption counts
        run: |
          echo "SRT files downloaded:" $(ls captions/*.srt 2>/dev/null | wc -l)

      # -------- IDs + titles for index --------
      - name: Export playlist JSON (IDs + titles)
        run: yt-dlp -J --flat-playlist "https://www.youtube.com/playlist?list=UUbRF6gtkzmbSOtcM6Jq4ANw" > playlist.json

      # -------- build index.json --------
      - name: Build index.json
        env:
          YT_HANDLE: "@blackoutapp"
        run: python scripts/build_index_from_srt.py

      # -------- push safely --------
      - name: Configure git identity
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Rebase onto latest
        run: |
          git fetch origin ${{ github.ref_name }}
          git pull --rebase origin ${{ github.ref_name }}

      - name: Commit & push (with retry)
        run: |
          set -e
          git add public/index.json
          if git diff --cached --quiet; then
            echo "No changes"
            exit 0
          fi
          git commit -m "Update transcript index"
          for i in 1 2 3; do
            if git push origin HEAD:${{ github.ref_name }}; then
              exit 0
            fi
            echo "Push failed (attempt $i). Rebasing and retrying..."
            git pull --rebase origin ${{ github.ref_name }}
          done
          echo "Push failed after retries"
          exit 1
