name: Build captions index from SRTs

permissions:
  contents: write

on:
  schedule:
    - cron: "0 */6 * * *"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install tools
        run: |
          python -m pip install --upgrade pip
          pip install yt-dlp srt

      - name: Prepare dirs
        run: mkdir -p captions public

      # 1) Download YOUR uploaded English captions as SRT (no auto-captions)
      - name: Download uploaded SRT captions
        run: |
          yt-dlp -i --skip-download \
            --write-sub --sub-langs "en,en-US,en.*" \
            --convert-subs srt --no-overwrites \
            -o "captions/%(id)s.%(ext)s" \
            "https://www.youtube.com/@blackoutapp"

      # 2) Export IDs+titles for mapping
      - name: Export playlist JSON (IDs + titles)
        run: yt-dlp -J --flat-playlist "https://www.youtube.com/@blackoutapp" > playlist.json

      # 3) Build the searchable index from SRTs
      - name: Build index.json
        env:
          YT_HANDLE: "@blackoutapp"
        run: python scripts/build_index_from_srt.py
# keep the earlier steps the same (checkout, build, etc.)

- name: Configure git identity
  run: |
    git config user.name "github-actions[bot]"
    git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

# Pull latest before committing so we never get non-fast-forward
- name: Rebase onto latest main
  run: |
    git fetch origin ${{ github.ref_name }}
    git pull --rebase origin ${{ github.ref_name }}

- name: Commit & push (with retry)
  run: |
    set -e
    git add public/index.json
    if git diff --cached --quiet; then
      echo "No changes"
      exit 0
    fi
    git commit -m "Update transcript index"
    # Try push; if someone pushed meanwhile, rebase and retry up to 3x
    for i in 1 2 3; do
      if git push origin HEAD:${{ github.ref_name }}; then
        exit 0
      fi
      echo "Push failed (attempt $i). Rebasing and retrying..."
      git pull --rebase origin ${{ github.ref_name }}
    done
    echo "Push failed after retries"
    exit 1
