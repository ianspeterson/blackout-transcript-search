name: Build captions index from SRTs

permissions:
  contents: write

on:
  schedule:
    - cron: "0 */6 * * *"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install ffmpeg (needed for some subtitle conversions)
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg

      - name: Install tools
        run: |
          python -m pip install --upgrade pip
          pip install yt-dlp srt

      - name: Prepare dirs
        run: mkdir -p captions public

      - name: Write cookies file
        run: |
          # write secret to cookies.txt without printing it
          printf "%s" "${{ secrets.YTDLP_COOKIES }}" > cookies.txt

      # 1) Download YOUR uploaded English captions as SRT
      - name: Download uploaded SRT captions (with cookies)
        run: |
          yt-dlp -i --skip-download \
            --cookies cookies.txt \
            --extractor-args "youtube:player_client=web" \
            --write-sub --sub-langs "en,en-US,en.*" \
            --convert-subs srt --no-overwrites \
            -o "captions/%(id)s.%(ext)s" \
            "https://www.youtube.com/@blackoutapp"

      # (optional) include auto captions when no manual SRT is present:
    name: Download AUTO captions fallback
    run: |
      yt-dlp -i --skip-download \
      --cookies cookies.txt \
       --extractor-args "youtube:player_client=web" \
      --write-auto-sub --sub-langs "en,en-US,en.*" \
           --convert-subs srt --no-overwrites \
             -o "captions/%(id)s.auto.%(ext)s" \
     \     "https://www.youtube.com/@blackoutapp"

      - name: Show caption counts
        run: |
          echo "SRT files downloaded:" $(ls captions/*.srt 2>/dev/null | wc -l)


      # 2) Export IDs+titles for mapping
      - name: Export playlist JSON (IDs + titles)
        run: yt-dlp -J --flat-playlist "https://www.youtube.com/@blackoutapp" > playlist.json

      # 3) Build the searchable index from SRTs
      - name: Build index.json
        env:
          YT_HANDLE: "@blackoutapp"
        run: python scripts/build_index_from_srt.py

      # 4) Configure git and push update safely
      - name: Configure git identity
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Rebase onto latest
        run: |
          git fetch origin ${{ github.ref_name }}
          git pull --rebase origin ${{ github.ref_name }}

      - name: Commit & push (with retry)
        run: |
          set -e
          git add public/index.json
          if git diff --cached --quiet; then
            echo "No changes"
            exit 0
          fi
          git commit -m "Update transcript index"
          for i in 1 2 3; do
            if git push origin HEAD:${{ github.ref_name }}; then
              exit 0
            fi
            echo "Push failed (attempt $i). Rebasing and retrying..."
            git pull --rebase origin ${{ github.ref_name }}
          done
          echo "Push failed after retries"
          exit 1
